@page "/counter"

@using BlazorWebAssembly.Data
@using System.Threading
@inject FuzzyService FuzzyService

<h1>Fuzzy matching</h1>


<br />
<br />
<div>
    <div class="form-group row">
        <label for="staticEmail" class="col-sm-2 col-form-label">Słowo 1</label>
        <div class="col-sm-10">
            <input type="text" class="form-control" id="inputPassword" placeholder="Wpisz 1 słowo" @bind="value1">
        </div>
    </div>
    <div class="form-group row">
        <label for="inputPassword" class="col-sm-2 col-form-label">Słowo 2</label>
        <div class="col-sm-10">
            <input type="text" class="form-control" id="inputPassword" placeholder="Wpisz 2 słowo" @bind="value2">
        </div>
    </div>

    <div class="form-group row">
    
        <div class="col-md-12">
            <button class="btn btn-primary" @onclick="GetScore">Pobierz wynik</button>
        </div>

        <label for="inputPassword" class="col-sm-2 col-form-label">Wynik: @score% </label>
    </div>

</div>

<br />

<div class="progress">
    <div class="progress-bar" role="progressbar" style="width: @pgBarBalue%;" aria-valuenow=@pgBarBalue aria-valuemin="0" aria-valuemax="100">@pgBarBalue %</div>
</div>


@code {
    private int pgBarBalue = 0;
    private int score;
    private string value1;
    private string value2;

    protected override void OnInitialized()
    {
        pgBarBalue = 0;
        value1 = "";
        value2 = "";
    }

    private void ChangeValueInProgressBar()
    {
        pgBarBalue++;
    }

    private async void GetScore()
    {
        //pgBarBalue = 0;
        //for (int i = 0; i <= 4; i ++)
        //{
        //    pgBarBalue = pgBarBalue + 20;
        //    await Task.Delay(1000);
        //}
        if (value1 != null || value2 != null) score = await FuzzyService.GetScore(value1, value2);
    }
}